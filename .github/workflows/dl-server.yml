name: HTTP File Server

on:
  workflow_dispatch:

jobs:
  setup_and_upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update
        sudo apt install -y ngrok
        echo "2N5KFYmyocPObelDKx26R1e2gfP_MiFweWSd9A8CbrC1E9Ef" | ngrok authtoken
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Install and run http-file-server
      run: |
        curl -L https://github.com/sgreben/http-file-server/releases/download/1.6.1/http-file-server_1.6.1_linux_x86_64.tar.gz | tar xz
        ./http-file-server &

    - name: Expose server with ngrok
      run: |
        ngrok http 8080 &

    - name: Wait for ngrok to initialize
      run: sleep 10

    - name: Get ngrok public URL
      run: |
        curl -s http://localhost:4040/api/tunnels | jq -r ".tunnels[0].public_url"
        echo "NGROK_PUBLIC_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r ".tunnels[0].public_url")" >> $GITHUB_ENV
        echo "NGROK_PUBLIC_IP=$(curl -s http://localhost:4040/api/tunnels | jq -r ".tunnels[0].config.addr")" >> $GITHUB_ENV

    - name: Download files
      run: |
        curl -LO https://github.com/GuinnessShep/LTSC-ADD-Microsoft-Store/releases/download/69/ltscaddstore-1.0.4-py3-none-any-eng.whl
        curl -LO https://github.com/GuinnessShep/LTSC-ADD-Microsoft-Store/releases/download/69/ltscaddstore-english-1.0.4.tar.gz

    - name: Upload files to http server
      run: |
        curl -F "file=@ltscaddstore-1.0.4-py3-none-any-eng.whl" ${{ env.NGROK_PUBLIC_URL }}
        curl -F "file=@ltscaddstore-english-1.0.4.tar.gz" ${{ env.NGROK_PUBLIC_URL }}

    - name: Display ngrok URL and IP
      run: |
        echo "Public URL: ${{ env.NGROK_PUBLIC_URL }}"
        echo "Public IP: ${{ env.NGROK_PUBLIC_IP }}"

    # Keep the runner active
    - name: Sleep indefinitely
      run: sleep infinity
